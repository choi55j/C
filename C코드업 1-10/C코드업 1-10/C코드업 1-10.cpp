// 1번

//C / C++언어에서 가장 기본적인 명령이 출력문이다.
//printf()를 이용해 다음 단어를 출력하시오.
//
//Hello
//
//참고
//C / C++ IDE 프로그램을 설치한 후,
//아래와 같은 소스 코드를 작성하고 "컴파일-실행"을 수행시키면,
//지정한 "문장"이 출력된다.
//
//#include <stdio.h>
//
//int main()
//{
//    printf("문장");
//    return 0;
//}
//
//**주의 : 본 화면에서 복사하여 붙여넣기하면 제대로 되지 않을 수 있으니 직접 소스코드를 작성해 넣어야 한다.





#include <iostream>

int main() {
    printf("Hello");
    return 0;
}


// 2번

//이번에는 공백()을 포함한 문장을 출력한다.
//다음 문장을 출력해보자.
//
//Hello World
//(대소문자에 주의한다.)
//
//참고
//#include <stdio.h>
//
//int main()
//{
//    printf("문장1 문장2");
//    return 0;
//}
//을 실행시키면 "문장1”, "문장2"가 공백()을 사이에 두고 출력된다.
//
//* *주의 : 본 화면에서 복사하여 붙여넣기하면 제대로 되지 않을 수 있으니 직접 소스코드를 작성해 넣어야 한다.


int main() {
    printf("Hello World");
    return 0;
}


// 3번

//이번에는 줄을 바꿔 출력하는 출력문을 연습해보자.
//다음과 같이 줄을 바꿔 출력해야 한다.
//
//Hello
//World
//(두 줄에 걸쳐 줄을 바꿔 출력)
//
//참고
//백슬래시 문자 '\'는 글꼴 설정에 따라,
//'W'와 비슷한 원표시('₩')로 보이기도 하지만 같은 문자이다.
//printf() 함수를 이용해 문장을 출력할 때, 줄을 바꾸기 위해서는
//'\n'(new line을 의미)을 줄을 바꿀 위치에 넣어야 한다.
//'\t'는 탭(tab),
//'\c'은 캐리지리턴(carriage return, 그 줄의 맨 앞으로 커서를 보냄)
//등이 있다.
//
//이러한 문자를 이스케이프(escape) 문자라고 하고,
//출력하는 문장 안에서 원하는 형식에 맞추어 출력할 수 있도록
//줄을 바꾸는 등의 특별한 의미들을 나타내기 위해 사용한다.
//
//예시
//printf("Hello\nWorld");
//
//**주의 : 본 화면에서 복사하여 붙여넣기하면 제대로 되지 않을 수 있으니 직접 소스코드를 작성해 넣어야한다.

int main() {
    printf("Hello\nWorld");
    return 0;
}


// 4번

//이번에는 작은 따옴표(single quotation mark)가 들어있는
//특수한 형태의 출력문에 대한 연습을 해보자.
//
//다음 문장을 출력하시오.
//
//'Hello'
//
//참고
//printf() 함수로 따옴표 문자 ' 를 출력하기 위해서는 \' 로 입력해야 한다.
//
//\' 는 작은따옴표 문자 자체 출력
//\" 는 큰따옴표 문자 자체 출력 …  등.
//
//작은따옴표나 큰따옴표는 문자나 문장을 나타내기 위한 기호들로 쓰이는데,
//그렇게 쓰이는 의미가 아니라 따옴표 그 자체를 표현해 주기 위해서이다.
//
//예시
//printf("\'");
//
//**주의 : 본 화면에서 복사하여 붙여넣기하면 제대로 되지 않을 수 있으니 직접 작성해야한다.

int main() {
    printf("\'Hello\'");
    return 0;
}


// 5번

//이번에는 큰따옴표(double quotation mark)가 포함된 출력문을 연습해보자.
//
//다음 문장을 출력하시오.
//
//"Hello World"
//(단, 큰따옴표도 함께 출력한다.)
//
//참고
//printf() 함수로 큰 따옴표 문자 " 를 출력하기 위해서는 \" 로 출력해야 한다.
//
//예시
//printf("\"");
//
//**주의 : 본 화면에서 복사하여 붙여넣기하면 제대로 되지 않을 수 있으니 직접 작성해야한다.


int main() {
    printf("\"Hello World\"");
    return 0;
}


// 6번

//이번에는 특수문자 출력에 도전하자!!
//
//다음 문장을 출력하시오.
//
//"!@#$%^&*()"
//(단, 큰따옴표도 함께 출력한다.)
//
//참고
//% 기호가 앞에 붙는 문자를 형식 지정자(format specifier)라고 하며,
//그 위치에서 지정한 형식으로 값을 출력해 준다.
//따라서, 퍼센트 문자% 를 출력하기 위해서는%% 로 출력해 주어야 한다.
//
//예시
//printf("%%");
//
//**주의 : 본 화면에서 복사하여 붙여넣기하면 제대로 되지 않을 수 있으니 직접 작성해야한다.

int main() {
    printf("\"!@#$%%^&*()\"");
    return 0;
}


// 7번

//윈도우 운영체제의 파일 경로를 출력하는 연습을 해보자.
//
//파일 경로에는 특수문자들이 포함된다.
//
//다음 경로를 출력하시오.
//
//"C:\Download\hello.cpp"
//(단, 큰따옴표도 함께 출력한다.)
//
//참고
//printf() 함수로 백슬래시 문자 \ 를 출력하기 위해서는 \\ 로 출력해야 한다.
//
//예시
//printf("\\");
//
//
//**주의 : 본 화면에서 복사하여 붙여넣기하면 제대로 되지 않을 수 있으니 직접 작성해야한다.

int main() {
    printf("\"C:\\Download\\hello.cpp\"");
    return 0;
}

// 8번

//이번에는 특수문자를 출력하는 연습을 해보자.
//
//키보드로 입력할 수 없는 다음 모양을 출력해보자.
//(**참고 : 운영체제의 문자 시스템에 따라 아래와 같은 모양이 출력되지 않을 수 있다.)
//
//┌┬┐
//├┼┤
//└┴┘
//
//참고
//다음과 같은 유니코드로 특수문자를 표현한다고 하자.
//(운영체제 또는 컴파일러에 따라 사용되는 문자의 코드표가 다르다.)
//윈도우에서는 "ㅂ+한자" 키를 누르면 선문자를 입력할 수 있다.
//선문자를 이용하면 일반적인 텍스트 모드화면(메모장 등)에서도 표를 그릴 수 있다.
//
//유니코드 특수문자를 출력하는 방법,
//...
//printf("\u250C\u252C\u2510\n");
//...
//
//┌┬┐
//├┼┤
//└┴┘
//
//을 그려 출력하면 표처럼 선이 붙어 출력된다.
//
//CLI 명령어 입출력 화면에서 표나 그림을 그리기 위해 사용되던 방법과 비슷하다.
//
//** 주의 : 본 화면에서 복사하여 붙여넣기하면 제대로 되지 않을 수 있으니 직접 소스코드를 작성해 넣어야 한다.

int main() {
    printf("\u250C\u252C\u2510\n");
    printf("\u251C\u253C\u2524\n");
    printf("\u2514\u2534\u2518");
}

// 10번


//정수형(int)으로 변수를 선언하고, 변수에 정수값을 저장한 후
//변수에 저장되어 있는 값을 그대로 출력해보자.
//
//예시
//int main()
//{
//    int n;
//    scanf("%d", &n);
//    printf("%d", n);
//
//    return 0;
//}
//
//와 같은 형태로 가능하다.


int main() {
    int n;
    scanf("%d", &n);
    printf("%d", n);
}